=== AST结构 ===
{
  "type": "Program",
  "statements": [
    {
      "type": "FunctionDeclaration",
      "name": "main",
      "returnType": "int",
      "parameters": [],
      "body": {
        "type": "BlockStatement",
        "statements": [
          {
            "type": "VariableDeclaration",
            "name": "sum",
            "dataType": "int",
            "initializer": {
              "type": "NumberLiteral",
              "value": 0
            }
          },
          {
            "type": "VariableDeclaration",
            "name": "i",
            "dataType": "int",
            "initializer": {
              "type": "NumberLiteral",
              "value": 0
            }
          },
          {
            "type": "WhileStatement",
            "condition": {
              "type": "BinaryExpression",
              "operator": "<",
              "left": {
                "type": "Identifier",
                "name": "i"
              },
              "right": {
                "type": "NumberLiteral",
                "value": 5
              }
            },
            "body": {
              "type": "BlockStatement",
              "statements": [
                {
                  "type": "LetDeclaration",
                  "name": "temp",
                  "dataType": "int",
                  "initializer": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "value": 2
                    }
                  }
                },
                {
                  "type": "AssignmentStatement",
                  "target": {
                    "type": "Identifier",
                    "name": "sum"
                  },
                  "value": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "sum"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "temp"
                    }
                  }
                },
                {
                  "type": "EmptyStatement"
                },
                {
                  "type": "AssignmentStatement",
                  "target": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "value": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "value": 1
                    }
                  }
                },
                {
                  "type": "EmptyStatement"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "FunctionCall",
              "callee": {
                "type": "Identifier",
                "name": "print"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "sum"
                }
              ]
            }
          },
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "name": "j",
              "dataType": "int",
              "initializer": {
                "type": "NumberLiteral",
                "value": 0
              }
            },
            "condition": {
              "type": "BinaryExpression",
              "operator": "<",
              "left": {
                "type": "Identifier",
                "name": "j"
              },
              "right": {
                "type": "NumberLiteral",
                "value": 3
              }
            },
            "update": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "BinaryExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "j"
                },
                "right": {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "j"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "value": 1
                  }
                }
              }
            },
            "body": {
              "type": "BlockStatement",
              "statements": [
                {
                  "type": "LetDeclaration",
                  "name": "multiplier",
                  "dataType": "int",
                  "initializer": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "j"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "value": 1
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "product",
                  "dataType": "int",
                  "initializer": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "sum"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "multiplier"
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryExpression",
                    "operator": ">",
                    "left": {
                      "type": "Identifier",
                      "name": "product"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "value": 30
                    }
                  },
                  "thenBranch": {
                    "type": "BlockStatement",
                    "statements": [
                      {
                        "type": "LetDeclaration",
                        "name": "bonus",
                        "dataType": "int",
                        "initializer": {
                          "type": "NumberLiteral",
                          "value": 10
                        }
                      },
                      {
                        "type": "AssignmentStatement",
                        "target": {
                          "type": "Identifier",
                          "name": "product"
                        },
                        "value": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "product"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "bonus"
                          }
                        }
                      },
                      {
                        "type": "EmptyStatement"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "FunctionCall",
                    "callee": {
                      "type": "Identifier",
                      "name": "print"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "product"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "value": {
              "type": "NumberLiteral",
              "value": 0
            }
          }
        ]
      }
    }
  ]
}